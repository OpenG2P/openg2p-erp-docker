image:
  registry: docker.io
  repository: shanidkh/bitnami-odoo
  tag: odoo

  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: false

odooEmail: admin

odooPassword: "admin"

loadDemoData: false

# customPostInitScripts:
  # enable-modules.sh: |
  #   #!/bin/bash
  #   echo "Python packages installation"
  #   pip3 install cachetools==4.2.2 boto3==1.17.84 cerberus==1.3.4 pyquerystring==1.1 parse-accept-language==0.1.2 phonenumbers==8.12.28 zxcvbn==4.4.28 pyotp==2.6.0 cryptography==3.4.7 pandas==1.3.2 python-dotenv==0.19.0 numpy==1.21.2 kafka-python==2.0.2 dicttoxml==1.7.4
  #   cp -r /opt/bitnami/python/lib/python3.8/site-packages/* /opt/bitnami/python/lib/python3.8/

allowEmptyPassword: false

# extraEnvVars:
#   - name: HOST
#     value: openg2p-postgresql
#   - name: USER
#     value: postgres
#   - name: PASSWORD
#     value: postgres
#   - name: POSTGRES_DB
#     value: postgres

replicaCount: 1

updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}

serviceAccount:
  create: true
  name: ""

extraVolumes:
  - name: odoo-addons
    emptyDir: {}
  - name: odoo-data-master
    persistentVolumeClaim:
      claimName: openg2p-erp12-pv

extraVolumeMounts:
  - name: odoo-addons 
    mountPath: "/mnt/extra-addons"
  - name: odoo-data-master
    mountPath: "/var/lib/odoo"

initContainers:
  - name: fetch-openg2p-addons
    image: busybox
    command: ["/bin/sh", "-c"]
    args:
      ["echo Init container "]
    volumeMounts:
      - name: odoo-addons 
        mountPath: "/mnt/extra-addons"
    securityContext:
      allowPrivilegeEscalation: false
      runAsUser: 0

podAntiAffinityPreset: soft

resources:
  limits: {}
  requests:
    memory: 512Mi
    cpu: 300m

containerPort: 8069

podSecurityContext:
  enabled: false
  fsGroup: 1001

containerSecurityContext:
  allowPrivilegeEscalation: false
  enabled: false
  runAsUser: 0

livenessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 2000
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

startupProbe:
  enabled: false
  path: /
  initialDelaySeconds: 300
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

service:
  type: LoadBalancer
  port: 80
  externalTrafficPolicy: Cluster

ingress:
  enabled: false
  selfSigned: false
  pathType: ImplementationSpecific
  apiVersion: ""
  hostname: odoo.local
  path: /
  annotations: {}
  tls: false
  extraHosts: []
  extraPaths: []
  secretName: odoo.local-tls
  extraTls: []
  secrets: []

persistence:
  enabled: true
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  accessMode: ReadWriteOnce
  size: 10Gi
  dataSource: {}
  existingClaim: ""

volumePermissions:
  enabled: false
  resources:
    limits: {}
    requests: {}
  securityContext:
    runAsUser: 0
    
pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 11
  targetCPU: 50
  targetMemory: 50

postgresql:
  enabled: true
  postgresqlUsername: "openg2p"
  postgresqlPassword: "openg2p"
  postgresqlDatabase: openg2p
  existingSecret: ""

  persistence:
    enabled: true
    existingClaim: ""
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 8Gi

networkPolicy:
  enabled: false
  
  ingress:
    enabled: false
    podSelector: {}
    namespaceSelector: {}

  ingressRules:
    backendOnlyAccessibleByFrontend: false
    customBackendSelector: {}
    accessOnlyFrom:
      enabled: false
      namespaceSelector: {}
      podSelector: {}
    customRules: {}

  egressRules:
    denyConnectionsToExternal: false
    customRules: {}
